1534216276127:(in-ns 'tic-tac-toe.state)
1534216295462:@history
1534216316024:)
1534216324454:@history
1534216340854:(0 @history)
1534216364931:(get @history 0)
1534216416229:(swap! history #(assoc % 1 [0 0 0 0 0 0 0 0 0]))
1534216421610:(get @history 1)
1534216425169:(get @history 0)
1534216664143:@history
1534217673641:(in-ns 'tic-tac-toe.state)
1534217675194:@history
1534217824058:(let ["a" {:a 1}\n      "b" (assoc a :b 2)]\n  (prn a)\n  (prn b))
1534217842788:(let ["a" {:a 1}\n      "b" (assoc a :b 2)]\n  (prn "a")\n  (prn "b"))
1534217862334:(let [a {:a 1}\n      b (assoc a :b 2)]\n  (prn a)\n  (prn b))
1534218292102:@history
1534218338242:(last @history)
1534218378518:(let [[a b] (last @history)\n      (prn  a)\n      (prn b))
1534218402501:(let [[a b] (last @history)]\n      (prn  a)\n      (prn b))
1534218477384:@history
1534218734125:@isWinner
1534218796017:@history
1534218805812:(last @history)
1534218823051:@history
1534218825018:(last @history)
1534219279036:(in-ns 'tic-tac-toe.state)
1534219281040:@history
1534219544774:@isWinner
1534219886790:@history
1534219921516:(def current-board (get @history 4))
1534219926247:current-board
1534219939421:(and\n       (== (nth current-board a)\n           (nth current-board b)\n           (nth current-board c))\n       (not (nil? (nth current-board a))))
1534220000016:(def a 0)
1534220005896:(def b 3)
1534220010725:(def c 6)
1534220013909:(and\n       (== (nth current-board a)\n           (nth current-board b)\n           (nth current-board c))\n       (not (nil? (nth current-board a))))
1534220449478:@history
1534220656092:(for [h @history]\n  (prn h))
1534220782855:@history
1534221348628::repl/quit
